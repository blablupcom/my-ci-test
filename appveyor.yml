# uses msys or cygwin for bash, wget, unzip, bzip2, etc
# The python package wget is another option

init:
  - "SET PATH=%PATH%;c:\\Python27\\Scripts;C:\\MinGW\\msys\\1.0\\bin;C:\\cygwin\bin"
  - "ECHO PATH=%PATH%"

install:
  - cmd: python -m pip install -r requirements.txt

build: off

test_script:
  - bash -x fetch.sh
  # Create two schema scripts with tables prefixed era2010 and era2012
  - "sed -re 's/(^CREATE TABLE|REFERENCES|CONSTRAINT) journal([_ ])/\1 era2010_journal\2/g' schema.sql > schema2010.sql"
  - "sed -re 's/(^CREATE TABLE|REFERENCES|CONSTRAINT) journal([_ ])/\1 era2012_journal\2/g' schema.sql > schema2012.sql"

  # Remove the duplicate disciplines and the misplaced new lines from the ERA2010 journal list
  - mv ERA2010_journal_title_list.xml ERA2010_journal_title_list.xml.orig
  - lxmlproc --output ERA2010_journal_title_list.xml era_journal_list_2010_tidy.xsl ERA2010_journal_title_list.xml.orig

  # Convert the xml to sql insert statements
  - perl era_journal_list_sql.pl ERA2010_journal_title_list.xml era2010 oracle > ERA2010_journal_title_list.sql
  - perl era_journal_list_sql.pl ERA2012_journal_title_list.xml era2012 oracle > ERA2012_journal_title_list.sql

cache:
  - .cache/era_xml -> fetch.sh


artifacts:
  - path: .cache/era_xml
    name: Raw data fetched and converted to XML
  - path: ERA2010_journal_title_list.xml
    name: Cleaned 2010 XML
  - path: '*.sql'
    name: Schema (Oracle syntax) and data files
